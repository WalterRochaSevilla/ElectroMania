version: '3.9'
services:
  backend:
    build:
      context: ./Back_Electroman√≠a
      dockerfile: Dockerfile
    container_name: electromania-backend
    env_file:
      - .env
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - "./Back_Electroman√≠a:/usr/src/app"
      - "/usr/src/app/node_modules"
    command: >
      sh -c "
      echo '‚è≥ Esperando a PostgreSQL...';
      until nc -z  postgres 5432; do
        sleep 2;
      done;
      echo '‚úÖ Base de datos lista, aplicando migraciones...';
      pnpm prisma migrate dev;
      echo 'üöÄ Iniciando NestJS...';
      pnpm run start:dev;
      "
  # db:
  #   image: mysql:8.3.0
  #   container_name: mysql-db
  #   env_file:
  #     - .env
  #   environment:
  #     MYSQL_ROOT_PASSWORD: ${DATABASE_ROOT_PASSWORD}
  #     MYSQL_DATABASE: ${DATABASE_NAME}
  #     MYSQL_USER: ${DATABASE_USER}
  #     MYSQL_PASSWORD: ${DATABASE_PASSWORD}
  #   ports:
  #     - "3307:3306"
  #   volumes:
  #     - db_data:/var/lib/mysql
  postgres:
    image: postgres:16
    container_name: postgres-db
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
volumes:
  pg_data: